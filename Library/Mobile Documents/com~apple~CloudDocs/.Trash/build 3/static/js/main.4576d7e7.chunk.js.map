{"version":3,"sources":["serviceWorker.js","Components/Group.js","Components/GroupList.js","Components/UpdateScore.js","Components/ScoreAndWins.js","Header.js","router/router.js","index.js"],"names":["Boolean","window","location","hostname","match","Group","react_default","a","createElement","className","this","props","children","Component","GroupList","_this","Object","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","state","groups","eachGroup","bind","assertThisInitialized","add","nextID","group","i","key","concat","style","width","marginBottom","Components_Group","index","points","wins","losses","coach","_this2","_ref$id","_ref","event","id","_ref$group","_ref$points","_ref$wins","_ref$losses","_ref$coach","_ref$players","players","setState","prevState","toConsumableArray","max","arguments","length","undefined","reduce","prev","curr","_this3","fetch","then","res","json","data","map","item","Name","Points","W","L","Coach","Players","catch","err","console","error","UpdateScore","redirect","handleSubmit","preventDefault","formBody","property","encodedKey","encodeURIComponent","encodedValue","push","join","method","headers","Content-Type","body","alert","render","Redirect","to","onSubmit","placeholder","type","name","onChange","ev","target","value","marginRight","md","ScoreAndWins","before","renderForm","renderUI","log","Accept","_this4","_this5","Header","active","backgroundColor","color","fontWeight","header","listStyle","display","justifyContent","NavLink","exact","activeStyle","ReactRouter","Fragment","src_Header","Route","path","component","ReactDOM","BrowserRouter","router","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.4576d7e7.chunk.js","sourcesContent":["// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React, {Component } from 'react'\n\nclass Group extends Component {\n    render() {\n        return (\n            <div className= 'group'>\n                <div> {this.props.children} </div>\n            </div>\n        )\n    }\n}\n\nexport default Group","import React, {Component } from 'react'\nimport Group from './Group'\n\nclass GroupList extends Component {\n    constructor(props) {\n        super(props)\n        this.state = {\n            groups: []\n        }\n        this.eachGroup = this.eachGroup.bind(this)\n        this.add = this.add.bind(this)\n        this.nextID = this.nextID.bind(this)\n    }\n    eachGroup(group, i) {\n        return (\n            <div key={`container${i}`} className=\"card\" style={{width: 18 + 'rem', marginBottom: 7 + 'px'}}>\n                <div className=\"card-body\">\n                    <Group key={`group${i}`} index={i}>\n                        <h3>{group.group}</h3>\n                        <h5>Points: {group.points}</h5>\n                        <h6>Number of Wins: {group.wins}</h6>\n                        <h6>Number of Losses: {group.losses}</h6>\n                        <h6>Coach: {group.coach}</h6>\n                    </Group>\n                </div>\n            </div>\n        )\n    }\n\n    add({ event = null, id = null, group = 'default group', points = 'default points', wins = 'default', losses = 'default', coach = 'default', players = 'default'}) {\n        this.setState(prevState => ({\n          groups: [\n            ...prevState.groups, {\n              id: id !== null ? id : this.nextID(prevState.groups),\n              group: group,\n              points: points,\n              wins: wins,\n              losses: losses,\n              coach: coach,\n              players: players\n            }]\n        }))\n    }\n\n    nextID(groups = []) {\n        let max = groups.reduce((prev, curr) => prev.id > curr.id ? prev.id : curr.id , 0)\n        return ++max\n      }\n\n    componentDidMount() {\n        const url = 'https://ex1-groups.herokuapp.com/allgroups';\n        fetch(url)\n            .then(res => res.json())\n            .then(data => data.map(item =>\n                this.add({group: item.Name, \n                        points: item.Points, \n                        wins: item.W, \n                        losses: item.L,\n                        coach: item.Coach ,\n                        players: item.Players\n                    })))\n            .catch(err => console.error(err));\n    }\n    render() {\n        return(\n            <div className = \"groupList\">\n                { this.state.groups.map(this.eachGroup)}\n            </div>\n        )\n    }\n}\n\nexport default GroupList","import React, {Component } from 'react'\nimport { Redirect } from 'react-router-dom'\nimport { MdSave } from 'react-icons/md'\n\nclass UpdateScore extends Component {\n    constructor(props)\n    {\n        super(props)\n        this.state = { \n                Name:\"\", \n                Points:\"\",\n                redirect: false\n                }\n        this.handleSubmit = this.handleSubmit.bind(this);  \n    }\n\n    handleSubmit(event){ \n        event.preventDefault();\n        let formBody = [];\n        for (var property in this.state) {\n            var encodedKey = encodeURIComponent(property);\n            var encodedValue = encodeURIComponent(this.state[property]);\n            formBody.push(encodedKey + \"=\" + encodedValue);\n        }       \n        formBody = formBody.join(\"&\");\n        \n        const url = 'https://ex1-groups.herokuapp.com/setscore/';\n        \n        fetch(url, {\n         method: 'POST',\n         headers: {'Content-Type':'application/x-www-form-urlencoded; charset=UTF-8'},\n        body: formBody\n        })\n        .then(res => res.json())\n        .then(() => alert(\"Update completed\"), \n        this.setState({ redirect: true },\n        this.render = ()=>(\n        <Redirect to=\"/\"/>)))\n        .catch(err => console.error(err));\n       };\n\n       render(){\n        return(\n            <div>\n                <form onSubmit={this.handleSubmit}>\n                    <p>Group name:</p>\n                    <input placeholder=\"Name\" type=\"text\" name=\"Name\" onChange={(ev)=>this.setState({Name:ev.target.value})}/>\n                    <p>Group Score:</p>\n                    <input placeholder=\"Points\" type=\"text\" name=\"Points\" onChange={(ev)=>this.setState({Points:ev.target.value})}/>\n                    <br></br>\n                    <button type = \"submit\" className=\"btn btn-primary\" style={{marginRight: 7+'px'}}><MdSave/></button>\n                </form>\n            </div>\n        )\n    }\n}\n\nexport default UpdateScore","import React, {Component } from 'react'\nimport Group from './Group'\nimport { MdSearch } from 'react-icons/md'\n\nclass ScoreAndWins extends Component {\n    constructor(props)\n    {\n        super(props)\n        this.state = { \n                points:\"\", \n                wins:\"\",\n                groups: [],\n                before: true\n                }\n        this.handleSubmit = this.handleSubmit.bind(this);  \n        this.add = this.add.bind(this)\n        this.nextID = this.nextID.bind(this)\n        this.renderForm = this.renderForm.bind(this)\n        this.renderUI = this.renderUI.bind(this)\n        this.eachGroup = this.eachGroup.bind(this)\n    }\n\n    handleSubmit(event){ \n        this.state.groups=[];\n        event.preventDefault();\n        let formBody = [];\n        for (var property in this.state) {\n            var encodedKey = encodeURIComponent(property);\n            var encodedValue = encodeURIComponent(this.state[property]);\n            formBody.push(encodedKey + \"=\" + encodedValue);\n        }       \n        formBody = formBody.join(\"&\");\n\n        console.log(formBody)\n        const url = 'https://ex1-groups.herokuapp.com/scoresandwins';\n        fetch(url, {\n         method: 'POST',\n         headers: {\n             'Accept': 'application/json',\n             'Content-Type':'application/x-www-form-urlencoded; charset=UTF-8'\n            },\n         body: formBody\n         })\n         .then(res => res.json())\n         .then(data => data.map(item => \n             this.add({group: item.Name, \n                     points: item.Points, \n                     wins: item.W, \n                     losses: item.L,\n                     coach: item.Coach ,\n                     players: item.Players\n                 }, \n                 this.state.before=false)))\n         .catch(err => console.error(err));\n       };\n\n       add({ event = null, id = null, group = 'default group', points = 'default points', wins = 'default', losses = 'default', coach = 'default', players = 'default'}) {\n        this.setState(prevState => ({\n          groups: [\n            ...prevState.groups, {\n              id: id !== null ? id : this.nextID(prevState.groups),\n              group: group,\n              points: points,\n              wins: wins,\n              losses: losses,\n              coach: coach,\n              players: players\n            }]\n        }))\n    }\n    nextID(groups = []) {\n        let max = groups.reduce((prev, curr) => prev.id > curr.id ? prev.id : curr.id , 0)\n        return ++max\n      }\n\n    eachGroup(group, i) {\n        return (\n            <div key={`container${i}`} className=\"card\" style={{width: 18 + 'rem', marginBottom: 7 + 'px'}}>\n                <div className=\"card-body\">\n                    <Group key={`group${i}`} index={i}>\n                        <h3>{group.group}</h3>\n                        <h5>Points: {group.points}</h5>\n                        <h6>Number of Wins: {group.wins}</h6>\n                        <h6>Number of Losses: {group.losses}</h6>\n                        <h6>Coach: {group.coach}</h6>\n                    </Group>\n                </div>\n            </div>\n        )\n    }\n    renderForm(){\n        return(\n            <div>\n                <form onSubmit={this.handleSubmit}>\n                    <p>Points:</p>\n                    <input placeholder=\"points\" type=\"text\" name=\"points\" onChange={(ev)=>this.setState({points:ev.target.value})}/>\n                    <p>Wins:</p>\n                    <input placeholder=\"wins\" type=\"text\" name=\"wins\" onChange={(ev)=>this.setState({wins:ev.target.value})}/>\n                    <br></br>\n                    <button type = \"submit\" className=\"btn btn-primary\" style={{marginRight: 7+'px'}}><MdSearch/></button>\n                </form>\n            </div>\n        )\n    }\n\n    renderUI(){\n        return(\n            <div>\n                <form onSubmit={this.handleSubmit}>\n                    <p>Points:</p>\n                    <input placeholder=\"points\" type=\"text\" name=\"points\" onChange={(ev)=>this.setState({points:ev.target.value})}/>\n                    <p>Wins:</p>\n                    <input placeholder=\"wins\" type=\"text\" name=\"wins\" onChange={(ev)=>this.setState({wins:ev.target.value})}/>\n                    <br></br>\n                    <button type = \"submit\" className=\"btn btn-primary\" style={{marginRight: 7+'px'}}><MdSearch/></button>\n                </form>\n                <div className = \"groupList\">\n                { this.state.groups.map(this.eachGroup)}\n            </div>\n            </div>\n        )\n    }\n    render() {\n        return this.state.before ? this.renderForm() : this.renderUI()\n    }\n}\nexport default ScoreAndWins","import React, {Component } from 'react'\nimport { NavLink } from 'react-router-dom'\n\nclass Header extends Component {\n    active = {\n        backgroundColor: \"#212F3D\",\n        color: \"white\",\n        fontWeight: \"bold\"\n    }\n    header = {\n        listStyle: \"none\",\n        display: \"flex\",\n        justifyContent: \"space-evenly\"\n    }\n    render() {\n        return(\n            <div style={this.header}>\n                <NavLink exact to=\"/\" activeStyle={this.active}>\n                 Home\n             </NavLink>\n\n             <NavLink to=\"/ScoreAndWins\" activeStyle={this.active}>\n            Scores and Wins\n            </NavLink>\n\n             <NavLink to=\"/UpdateScore\" activeStyle={this.active}>\n             Update Score\n            </NavLink>\n\n        </div>\n        )}\n}\n\nexport default Header","import React from 'react'\nimport {Route} from 'react-router-dom'\nimport GroupList from '../Components/GroupList'\nimport UpdateScore from '../Components/UpdateScore'\nimport ScoreAndWins from '../Components/ScoreAndWins'\nimport Header from '../Header'\n\nconst ReactRouter = () => {\n    return(\n        <React.Fragment>\n            <Header/>\n            <Route exact path=\"http://shenkar.html5-book.co.il/2018-2019/dcs/dev_173/\" component={GroupList}/>\n            <Route path=\"/ScoreAndWins\" component={ScoreAndWins}/>\n            <Route path=\"/UpdateScore\" component={UpdateScore}/>\n            \n            \n        </React.Fragment>\n    )\n}\n\nexport default ReactRouter","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport * as serviceWorker from './serviceWorker';\nimport {BrowserRouter as Router} from 'react-router-dom'\nimport ReactRouter from './router/router'\n\nReactDOM.render(\n    <Router>\n        <ReactRouter/>\n    </Router>, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}